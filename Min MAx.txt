//min max




#include <iostream>
#include<omp.h>
#include<climits>
using namespace std;

void min_reduction(int a[], int n);
void max_reduction(int a[], int n);
void sum_reduction(int a[], int n);
void avg_reduction(int a[], int n);

void min_reduction(int a[], int n)
{
	int min_value=INT_MAX;
	#pragma omp parallel for reduction(min:min_value)
	for(int i=0;i<n;i++)
	{
		if(a[i]<min_value){
			min_value=a[i];
		}
	}

	cout<<"Minimum value is :"<<min_value<<endl;
}

void max_reduction(int a[], int n)
{
	int max_value=INT_MIN;
	#pragma omp parallel for reduction(max:max_value)
	for(int i=0;i<n;i++)
	{
		if(a[i]>max_value)
		{
			max_value=a[i];
		}
	}

	cout<<"Maximum value is :"<<max_value<<endl;
}


void sum_reduction(int a[], int n)
{
	int sum=0;
	#pragma omp parallel for reduction(+:sum)
	for(int i=0;i<n;i++)
	{
		sum=sum+a[i];
	}

	cout<<"Sum : "<<sum<<endl;
	cout<<"Average : "<<sum/n-1;
}


int main()
{
	int n;
	cout<<"Enter the length of array :";
	cin>>n;
	int a[n];
	cout<<"Enter the elements of array :";
	for(int i=0;i<n;i++)
	{
		cin>>a[i];
	}

	min_reduction(a, n);
	max_reduction(a, n);
	sum_reduction(a, n);
}
