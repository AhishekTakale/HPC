

//merge



#include <iostream>
#include<omp.h>
using namespace std;

void merge(int a[], int lb, int mid, int ub);
void mergesort(int a[], int lb, int ub);

void mergesort(int a[], int lb, int ub)
{
	int mid;
	if(lb<ub)
	{
		mid=(lb+ub)/2;

		#pragma omp sections
		{
			#pragma omp section
			{
				mergesort(a, lb, mid);
			}
			#pragma omp section
			{
				mergesort(a, mid+1, ub);
			}
		}

		merge(a, lb, mid, ub);
	}
}

void merge(int a[], int lb, int mid, int ub)
{
	int i, j, k;
	int b[ub+1];

	i=lb;
	j=mid+1;
	k=lb;

	while(i<=mid && j<=ub)
	{
		if(a[i]<=a[j])
		{
			b[k++]=a[i++];
		}

		else{
			b[k++]=a[j++];
		}
	}


	for(;i<=mid;i++)
	{
		b[k++]=a[i];
	}

	for(;j<=ub;j++)
	{
		b[k++]=a[j];
	}

	for(i=lb;i<=ub;i++)
	{
		a[i]=b[i];
	}

}



int main()
{
	int n;
	cout<<"Enter the length of array :";
	cin>>n;

	int a[n];
	cout<<"Enter the elements of array :";

	for(int i=0;i<n;i++)
	{
		cin>>a[i];
	}

	mergesort(a, 0, n-1);

	cout<<"Sorted array is :";
	for(int i=0;i<n;i++)
	{
		cout<<a[i]<<" ";
	}

	return 0;
}